<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.giroux.kevin.dofustuff</groupId>
	<artifactId>media</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<parent>
		<artifactId>spring-boot-starter-parent</artifactId>
		<groupId>org.springframework.boot</groupId>
		<version>1.5.7.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.SR7</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- ###### Spring Boot ####### -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- ############################## -->

		<!-- AOP - Interceptor for WS -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<!-- End of AOP - Interceptor for WS -->

		<!-- Utilitaire -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		
		<!--Spring cloud dependencies -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-ribbon</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-transport-native-epoll</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- End of Spring cloud dependencies -->
		<!-- zxing -->
		<dependency>
		  <groupId>com.google.zxing</groupId>
		  <artifactId>core</artifactId>
		  <version>2.0</version>
		</dependency>
		<dependency>
		  <groupId>com.google.zxing</groupId>
		  <artifactId>javase</artifactId>
		  <version>2.0</version>
		</dependency>
		<!-- End of zxing -->
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<executable>true</executable>
					</configuration>
					<executions>
						<execution>
							<phase>deploy</phase>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<version>${wagon.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-ssh</artifactId>
							<version>${wagon.ssh.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<serverId>${media.server}</serverId>
						<fromDir>${project.build.directory}</fromDir>
						<toDir>${deployement.toDir}</toDir>
						<url>${url.media}</url>
						<includes>*.jar</includes>
						<commands>
							<command>${command.to.run.after.deploy}</command>
						</commands>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>upload-war-to-server</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
							<goal>sshexec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<dockerHost>${docker.daemon.host}</dockerHost>
					<imageName>smartdisplay/media</imageName>
					<forceTags>true</forceTags>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<!--<imageTag>latest</imageTag>-->
					</imageTags>
					<baseImage>openjdk:8-jre-alpine</baseImage>
					<entryPoint>[ "sh", "-c", "java $JAVA_OPTS -jar /${project.build.finalName}.jar" ]</entryPoint>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
